name: "Integrate"

on:
  push:
    branches:
      - "master"
  pull_request: null

jobs:
  byte_level:
    name: "0️⃣ Byte-level"
    runs-on: "ubuntu-20.04"
    steps:
      - name: "Checkout code"
        uses: "actions/checkout@v3"

      - name: "Find non-printable ASCII characters"
        run: |
          ! LC_ALL=C.UTF-8 find . -type f -name "*.php" -print0 | xargs -0 -- grep -PHn "[^ -~]"

  syntax_errors:
    name: "1️⃣ Syntax errors"
    runs-on: "ubuntu-20.04"
    steps:
      - name: "Set up PHP"
        uses: "shivammathur/setup-php@v2"
        with:
          php-version: "7.4"

      - name: "Checkout code"
        uses: "actions/checkout@v3"

      - name: "Install dependencies"
        uses: "ramsey/composer-install@v2"
        with:
          dependency-versions: "highest"

      - name: "Check source code for syntax errors"
        run: "composer exec -- parallel-lint lib/"

  unit_tests:
    name: "2️⃣ Unit and functional tests"
    needs:
      - "byte_level"
      - "syntax_errors"
    runs-on: "ubuntu-20.04"
    strategy:
      matrix:
        php-version:
          - "7.4"
        dependencies:
          - "lowest"
          - "locked"
          - "highest"
    steps:
      - name: "Set up PHP"
        uses: "shivammathur/setup-php@v2"
        with:
          php-version: "${{ matrix.php-version }}"

      - name: "Checkout code"
        uses: "actions/checkout@v3"

      - name: "Install dependencies"
        uses: "ramsey/composer-install@v2"
        with:
          dependency-versions: "${{ matrix.dependencies }}"

      - name: "Execute unit tests"
        run: "composer exec -- phpunit --verbose tests/"

#      - name: Send coverage to Coveralls
#        if: "matrix.php-version == '7.4' && matrix.dependencies == 'highest'"
#        env:
#          COVERALLS_REPO_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
#        run: |
#          wget "https://github.com/php-coveralls/php-coveralls/releases/download/v2.5.2/php-coveralls.phar"
#          php ./php-coveralls.phar -v

  static_analysis:
    name: "3️⃣ Static Analysis"
    needs:
      - "byte_level"
      - "syntax_errors"
    runs-on: "ubuntu-20.04"
    steps:
      - name: "Set up PHP"
        uses: "shivammathur/setup-php@v2"
        with:
          php-version: "7.4"

      - name: "Checkout code"
        uses: "actions/checkout@v3"

      - name: "Validate Composer configuration"
        run: "composer validate --strict"

      - name: "Install dependencies"
        uses: "ramsey/composer-install@v2"
        with:
          dependency-versions: "highest"

      - name: "Execute static analysis"
        run: "composer exec -- phpstan analyze -l 5 lib/"

  coding_standards:
    name: "4️⃣ Coding Standards"
    needs:
      - "byte_level"
      - "syntax_errors"
    runs-on: "ubuntu-20.04"
    steps:
      - name: "Set up PHP"
        uses: "shivammathur/setup-php@v2"
        with:
          php-version: "7.4"

      - name: "Checkout code"
        uses: "actions/checkout@v3"

      - name: "Check adherence to EditorConfig"
        uses: "greut/eclint-action@v0"

      - name: "Install dependencies"
        uses: "ramsey/composer-install@v2"
        with:
          dependency-versions: "highest"

      - name: "Download PHP CS Fixer"
        run: "wget https://cs.symfony.com/download/php-cs-fixer-v3.phar"

      - name: "Check coding style"
        run: "php ./php-cs-fixer-v3.phar fix -v --using-cache=no ."
